// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Test.proto

#ifndef PROTOBUF_INCLUDED_Test_2eproto
#define PROTOBUF_INCLUDED_Test_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Test_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Test_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Test_2eproto();
namespace testPackage {
class TestChildMessage;
class TestChildMessageDefaultTypeInternal;
extern TestChildMessageDefaultTypeInternal _TestChildMessage_default_instance_;
class TestGrandchildMessage;
class TestGrandchildMessageDefaultTypeInternal;
extern TestGrandchildMessageDefaultTypeInternal _TestGrandchildMessage_default_instance_;
class TestMessage;
class TestMessageDefaultTypeInternal;
extern TestMessageDefaultTypeInternal _TestMessage_default_instance_;
}  // namespace testPackage
namespace google {
namespace protobuf {
template<> ::testPackage::TestChildMessage* Arena::CreateMaybeMessage<::testPackage::TestChildMessage>(Arena*);
template<> ::testPackage::TestGrandchildMessage* Arena::CreateMaybeMessage<::testPackage::TestGrandchildMessage>(Arena*);
template<> ::testPackage::TestMessage* Arena::CreateMaybeMessage<::testPackage::TestMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace testPackage {

enum TestEnum {
  enum0 = 0,
  enum1 = 1,
  enum2 = 2,
  enum3 = 3,
  TestEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TestEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool TestEnum_IsValid(int value);
const TestEnum TestEnum_MIN = enum0;
const TestEnum TestEnum_MAX = enum3;
const int TestEnum_ARRAYSIZE = TestEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestEnum_descriptor();
inline const ::std::string& TestEnum_Name(TestEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestEnum_descriptor(), value);
}
inline bool TestEnum_Parse(
    const ::std::string& name, TestEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestEnum>(
    TestEnum_descriptor(), name, value);
}
// ===================================================================

class TestGrandchildMessage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:testPackage.TestGrandchildMessage) */ {
 public:
  TestGrandchildMessage();
  virtual ~TestGrandchildMessage();

  TestGrandchildMessage(const TestGrandchildMessage& from);

  inline TestGrandchildMessage& operator=(const TestGrandchildMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestGrandchildMessage(TestGrandchildMessage&& from) noexcept
    : TestGrandchildMessage() {
    *this = ::std::move(from);
  }

  inline TestGrandchildMessage& operator=(TestGrandchildMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TestGrandchildMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestGrandchildMessage* internal_default_instance() {
    return reinterpret_cast<const TestGrandchildMessage*>(
               &_TestGrandchildMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TestGrandchildMessage* other);
  friend void swap(TestGrandchildMessage& a, TestGrandchildMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestGrandchildMessage* New() const final {
    return CreateMaybeMessage<TestGrandchildMessage>(nullptr);
  }

  TestGrandchildMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestGrandchildMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestGrandchildMessage& from);
  void MergeFrom(const TestGrandchildMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestGrandchildMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string repeatedStringField = 3;
  int repeatedstringfield_size() const;
  void clear_repeatedstringfield();
  static const int kRepeatedStringFieldFieldNumber = 3;
  const ::std::string& repeatedstringfield(int index) const;
  ::std::string* mutable_repeatedstringfield(int index);
  void set_repeatedstringfield(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeatedstringfield(int index, ::std::string&& value);
  #endif
  void set_repeatedstringfield(int index, const char* value);
  void set_repeatedstringfield(int index, const char* value, size_t size);
  ::std::string* add_repeatedstringfield();
  void add_repeatedstringfield(const ::std::string& value);
  #if LANG_CXX11
  void add_repeatedstringfield(::std::string&& value);
  #endif
  void add_repeatedstringfield(const char* value);
  void add_repeatedstringfield(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& repeatedstringfield() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_repeatedstringfield();

  // double doubleField = 1;
  void clear_doublefield();
  static const int kDoubleFieldFieldNumber = 1;
  double doublefield() const;
  void set_doublefield(double value);

  // uint64 repeatedStringLengthStringField = 2;
  void clear_repeatedstringlengthstringfield();
  static const int kRepeatedStringLengthStringFieldFieldNumber = 2;
  ::google::protobuf::uint64 repeatedstringlengthstringfield() const;
  void set_repeatedstringlengthstringfield(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:testPackage.TestGrandchildMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> repeatedstringfield_;
  double doublefield_;
  ::google::protobuf::uint64 repeatedstringlengthstringfield_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Test_2eproto;
};
// -------------------------------------------------------------------

class TestChildMessage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:testPackage.TestChildMessage) */ {
 public:
  TestChildMessage();
  virtual ~TestChildMessage();

  TestChildMessage(const TestChildMessage& from);

  inline TestChildMessage& operator=(const TestChildMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestChildMessage(TestChildMessage&& from) noexcept
    : TestChildMessage() {
    *this = ::std::move(from);
  }

  inline TestChildMessage& operator=(TestChildMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TestChildMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestChildMessage* internal_default_instance() {
    return reinterpret_cast<const TestChildMessage*>(
               &_TestChildMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TestChildMessage* other);
  friend void swap(TestChildMessage& a, TestChildMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestChildMessage* New() const final {
    return CreateMaybeMessage<TestChildMessage>(nullptr);
  }

  TestChildMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestChildMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestChildMessage& from);
  void MergeFrom(const TestChildMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestChildMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string stringField = 2;
  void clear_stringfield();
  static const int kStringFieldFieldNumber = 2;
  const ::std::string& stringfield() const;
  void set_stringfield(const ::std::string& value);
  #if LANG_CXX11
  void set_stringfield(::std::string&& value);
  #endif
  void set_stringfield(const char* value);
  void set_stringfield(const char* value, size_t size);
  ::std::string* mutable_stringfield();
  ::std::string* release_stringfield();
  void set_allocated_stringfield(::std::string* stringfield);

  // .testPackage.TestGrandchildMessage testGrandchildMessageField = 3;
  bool has_testgrandchildmessagefield() const;
  void clear_testgrandchildmessagefield();
  static const int kTestGrandchildMessageFieldFieldNumber = 3;
  const ::testPackage::TestGrandchildMessage& testgrandchildmessagefield() const;
  ::testPackage::TestGrandchildMessage* release_testgrandchildmessagefield();
  ::testPackage::TestGrandchildMessage* mutable_testgrandchildmessagefield();
  void set_allocated_testgrandchildmessagefield(::testPackage::TestGrandchildMessage* testgrandchildmessagefield);

  // int32 int32Field = 1;
  void clear_int32field();
  static const int kInt32FieldFieldNumber = 1;
  ::google::protobuf::int32 int32field() const;
  void set_int32field(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:testPackage.TestChildMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stringfield_;
  ::testPackage::TestGrandchildMessage* testgrandchildmessagefield_;
  ::google::protobuf::int32 int32field_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Test_2eproto;
};
// -------------------------------------------------------------------

class TestMessage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:testPackage.TestMessage) */ {
 public:
  TestMessage();
  virtual ~TestMessage();

  TestMessage(const TestMessage& from);

  inline TestMessage& operator=(const TestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TestMessage(TestMessage&& from) noexcept
    : TestMessage() {
    *this = ::std::move(from);
  }

  inline TestMessage& operator=(TestMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TestMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TestMessage* internal_default_instance() {
    return reinterpret_cast<const TestMessage*>(
               &_TestMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(TestMessage* other);
  friend void swap(TestMessage& a, TestMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TestMessage* New() const final {
    return CreateMaybeMessage<TestMessage>(nullptr);
  }

  TestMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TestMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TestMessage& from);
  void MergeFrom(const TestMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double repeatedDoubleField = 12;
  int repeateddoublefield_size() const;
  void clear_repeateddoublefield();
  static const int kRepeatedDoubleFieldFieldNumber = 12;
  double repeateddoublefield(int index) const;
  void set_repeateddoublefield(int index, double value);
  void add_repeateddoublefield(double value);
  const ::google::protobuf::RepeatedField< double >&
      repeateddoublefield() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_repeateddoublefield();

  // repeated string repeatedStringField = 14;
  int repeatedstringfield_size() const;
  void clear_repeatedstringfield();
  static const int kRepeatedStringFieldFieldNumber = 14;
  const ::std::string& repeatedstringfield(int index) const;
  ::std::string* mutable_repeatedstringfield(int index);
  void set_repeatedstringfield(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeatedstringfield(int index, ::std::string&& value);
  #endif
  void set_repeatedstringfield(int index, const char* value);
  void set_repeatedstringfield(int index, const char* value, size_t size);
  ::std::string* add_repeatedstringfield();
  void add_repeatedstringfield(const ::std::string& value);
  #if LANG_CXX11
  void add_repeatedstringfield(::std::string&& value);
  #endif
  void add_repeatedstringfield(const char* value);
  void add_repeatedstringfield(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& repeatedstringfield() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_repeatedstringfield();

  // repeated .testPackage.TestChildMessage repeatedTestChildMessageField = 16;
  int repeatedtestchildmessagefield_size() const;
  void clear_repeatedtestchildmessagefield();
  static const int kRepeatedTestChildMessageFieldFieldNumber = 16;
  ::testPackage::TestChildMessage* mutable_repeatedtestchildmessagefield(int index);
  ::google::protobuf::RepeatedPtrField< ::testPackage::TestChildMessage >*
      mutable_repeatedtestchildmessagefield();
  const ::testPackage::TestChildMessage& repeatedtestchildmessagefield(int index) const;
  ::testPackage::TestChildMessage* add_repeatedtestchildmessagefield();
  const ::google::protobuf::RepeatedPtrField< ::testPackage::TestChildMessage >&
      repeatedtestchildmessagefield() const;

  // string stringField = 8;
  void clear_stringfield();
  static const int kStringFieldFieldNumber = 8;
  const ::std::string& stringfield() const;
  void set_stringfield(const ::std::string& value);
  #if LANG_CXX11
  void set_stringfield(::std::string&& value);
  #endif
  void set_stringfield(const char* value);
  void set_stringfield(const char* value, size_t size);
  ::std::string* mutable_stringfield();
  ::std::string* release_stringfield();
  void set_allocated_stringfield(::std::string* stringfield);

  // .testPackage.TestChildMessage testChildMessageField = 10;
  bool has_testchildmessagefield() const;
  void clear_testchildmessagefield();
  static const int kTestChildMessageFieldFieldNumber = 10;
  const ::testPackage::TestChildMessage& testchildmessagefield() const;
  ::testPackage::TestChildMessage* release_testchildmessagefield();
  ::testPackage::TestChildMessage* mutable_testchildmessagefield();
  void set_allocated_testchildmessagefield(::testPackage::TestChildMessage* testchildmessagefield);

  // double doubleField = 1;
  void clear_doublefield();
  static const int kDoubleFieldFieldNumber = 1;
  double doublefield() const;
  void set_doublefield(double value);

  // float floatField = 2;
  void clear_floatfield();
  static const int kFloatFieldFieldNumber = 2;
  float floatfield() const;
  void set_floatfield(float value);

  // int32 int32Field = 3;
  void clear_int32field();
  static const int kInt32FieldFieldNumber = 3;
  ::google::protobuf::int32 int32field() const;
  void set_int32field(::google::protobuf::int32 value);

  // int64 int64Field = 4;
  void clear_int64field();
  static const int kInt64FieldFieldNumber = 4;
  ::google::protobuf::int64 int64field() const;
  void set_int64field(::google::protobuf::int64 value);

  // uint64 uint64Field = 6;
  void clear_uint64field();
  static const int kUint64FieldFieldNumber = 6;
  ::google::protobuf::uint64 uint64field() const;
  void set_uint64field(::google::protobuf::uint64 value);

  // uint32 uint32Field = 5;
  void clear_uint32field();
  static const int kUint32FieldFieldNumber = 5;
  ::google::protobuf::uint32 uint32field() const;
  void set_uint32field(::google::protobuf::uint32 value);

  // bool boolField = 7;
  void clear_boolfield();
  static const int kBoolFieldFieldNumber = 7;
  bool boolfield() const;
  void set_boolfield(bool value);

  // uint64 repeatedDoubleLengthDoubleField = 11;
  void clear_repeateddoublelengthdoublefield();
  static const int kRepeatedDoubleLengthDoubleFieldFieldNumber = 11;
  ::google::protobuf::uint64 repeateddoublelengthdoublefield() const;
  void set_repeateddoublelengthdoublefield(::google::protobuf::uint64 value);

  // uint64 repeatedStringLengthStringField = 13;
  void clear_repeatedstringlengthstringfield();
  static const int kRepeatedStringLengthStringFieldFieldNumber = 13;
  ::google::protobuf::uint64 repeatedstringlengthstringfield() const;
  void set_repeatedstringlengthstringfield(::google::protobuf::uint64 value);

  // uint64 repeatedTestChildMessageLengthTestChildMessageField = 15;
  void clear_repeatedtestchildmessagelengthtestchildmessagefield();
  static const int kRepeatedTestChildMessageLengthTestChildMessageFieldFieldNumber = 15;
  ::google::protobuf::uint64 repeatedtestchildmessagelengthtestchildmessagefield() const;
  void set_repeatedtestchildmessagelengthtestchildmessagefield(::google::protobuf::uint64 value);

  // .testPackage.TestEnum testEnumField = 9;
  void clear_testenumfield();
  static const int kTestEnumFieldFieldNumber = 9;
  ::testPackage::TestEnum testenumfield() const;
  void set_testenumfield(::testPackage::TestEnum value);

  // @@protoc_insertion_point(class_scope:testPackage.TestMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > repeateddoublefield_;
  mutable std::atomic<int> _repeateddoublefield_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> repeatedstringfield_;
  ::google::protobuf::RepeatedPtrField< ::testPackage::TestChildMessage > repeatedtestchildmessagefield_;
  ::google::protobuf::internal::ArenaStringPtr stringfield_;
  ::testPackage::TestChildMessage* testchildmessagefield_;
  double doublefield_;
  float floatfield_;
  ::google::protobuf::int32 int32field_;
  ::google::protobuf::int64 int64field_;
  ::google::protobuf::uint64 uint64field_;
  ::google::protobuf::uint32 uint32field_;
  bool boolfield_;
  ::google::protobuf::uint64 repeateddoublelengthdoublefield_;
  ::google::protobuf::uint64 repeatedstringlengthstringfield_;
  ::google::protobuf::uint64 repeatedtestchildmessagelengthtestchildmessagefield_;
  int testenumfield_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Test_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TestGrandchildMessage

// double doubleField = 1;
inline void TestGrandchildMessage::clear_doublefield() {
  doublefield_ = 0;
}
inline double TestGrandchildMessage::doublefield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestGrandchildMessage.doubleField)
  return doublefield_;
}
inline void TestGrandchildMessage::set_doublefield(double value) {
  
  doublefield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestGrandchildMessage.doubleField)
}

// uint64 repeatedStringLengthStringField = 2;
inline void TestGrandchildMessage::clear_repeatedstringlengthstringfield() {
  repeatedstringlengthstringfield_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TestGrandchildMessage::repeatedstringlengthstringfield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestGrandchildMessage.repeatedStringLengthStringField)
  return repeatedstringlengthstringfield_;
}
inline void TestGrandchildMessage::set_repeatedstringlengthstringfield(::google::protobuf::uint64 value) {
  
  repeatedstringlengthstringfield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestGrandchildMessage.repeatedStringLengthStringField)
}

// repeated string repeatedStringField = 3;
inline int TestGrandchildMessage::repeatedstringfield_size() const {
  return repeatedstringfield_.size();
}
inline void TestGrandchildMessage::clear_repeatedstringfield() {
  repeatedstringfield_.Clear();
}
inline const ::std::string& TestGrandchildMessage::repeatedstringfield(int index) const {
  // @@protoc_insertion_point(field_get:testPackage.TestGrandchildMessage.repeatedStringField)
  return repeatedstringfield_.Get(index);
}
inline ::std::string* TestGrandchildMessage::mutable_repeatedstringfield(int index) {
  // @@protoc_insertion_point(field_mutable:testPackage.TestGrandchildMessage.repeatedStringField)
  return repeatedstringfield_.Mutable(index);
}
inline void TestGrandchildMessage::set_repeatedstringfield(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:testPackage.TestGrandchildMessage.repeatedStringField)
  repeatedstringfield_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TestGrandchildMessage::set_repeatedstringfield(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:testPackage.TestGrandchildMessage.repeatedStringField)
  repeatedstringfield_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TestGrandchildMessage::set_repeatedstringfield(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeatedstringfield_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:testPackage.TestGrandchildMessage.repeatedStringField)
}
inline void TestGrandchildMessage::set_repeatedstringfield(int index, const char* value, size_t size) {
  repeatedstringfield_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:testPackage.TestGrandchildMessage.repeatedStringField)
}
inline ::std::string* TestGrandchildMessage::add_repeatedstringfield() {
  // @@protoc_insertion_point(field_add_mutable:testPackage.TestGrandchildMessage.repeatedStringField)
  return repeatedstringfield_.Add();
}
inline void TestGrandchildMessage::add_repeatedstringfield(const ::std::string& value) {
  repeatedstringfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:testPackage.TestGrandchildMessage.repeatedStringField)
}
#if LANG_CXX11
inline void TestGrandchildMessage::add_repeatedstringfield(::std::string&& value) {
  repeatedstringfield_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:testPackage.TestGrandchildMessage.repeatedStringField)
}
#endif
inline void TestGrandchildMessage::add_repeatedstringfield(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeatedstringfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:testPackage.TestGrandchildMessage.repeatedStringField)
}
inline void TestGrandchildMessage::add_repeatedstringfield(const char* value, size_t size) {
  repeatedstringfield_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:testPackage.TestGrandchildMessage.repeatedStringField)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
TestGrandchildMessage::repeatedstringfield() const {
  // @@protoc_insertion_point(field_list:testPackage.TestGrandchildMessage.repeatedStringField)
  return repeatedstringfield_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
TestGrandchildMessage::mutable_repeatedstringfield() {
  // @@protoc_insertion_point(field_mutable_list:testPackage.TestGrandchildMessage.repeatedStringField)
  return &repeatedstringfield_;
}

// -------------------------------------------------------------------

// TestChildMessage

// int32 int32Field = 1;
inline void TestChildMessage::clear_int32field() {
  int32field_ = 0;
}
inline ::google::protobuf::int32 TestChildMessage::int32field() const {
  // @@protoc_insertion_point(field_get:testPackage.TestChildMessage.int32Field)
  return int32field_;
}
inline void TestChildMessage::set_int32field(::google::protobuf::int32 value) {
  
  int32field_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestChildMessage.int32Field)
}

// string stringField = 2;
inline void TestChildMessage::clear_stringfield() {
  stringfield_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TestChildMessage::stringfield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestChildMessage.stringField)
  return stringfield_.GetNoArena();
}
inline void TestChildMessage::set_stringfield(const ::std::string& value) {
  
  stringfield_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:testPackage.TestChildMessage.stringField)
}
#if LANG_CXX11
inline void TestChildMessage::set_stringfield(::std::string&& value) {
  
  stringfield_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:testPackage.TestChildMessage.stringField)
}
#endif
inline void TestChildMessage::set_stringfield(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringfield_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:testPackage.TestChildMessage.stringField)
}
inline void TestChildMessage::set_stringfield(const char* value, size_t size) {
  
  stringfield_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:testPackage.TestChildMessage.stringField)
}
inline ::std::string* TestChildMessage::mutable_stringfield() {
  
  // @@protoc_insertion_point(field_mutable:testPackage.TestChildMessage.stringField)
  return stringfield_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestChildMessage::release_stringfield() {
  // @@protoc_insertion_point(field_release:testPackage.TestChildMessage.stringField)
  
  return stringfield_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestChildMessage::set_allocated_stringfield(::std::string* stringfield) {
  if (stringfield != nullptr) {
    
  } else {
    
  }
  stringfield_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringfield);
  // @@protoc_insertion_point(field_set_allocated:testPackage.TestChildMessage.stringField)
}

// .testPackage.TestGrandchildMessage testGrandchildMessageField = 3;
inline bool TestChildMessage::has_testgrandchildmessagefield() const {
  return this != internal_default_instance() && testgrandchildmessagefield_ != nullptr;
}
inline void TestChildMessage::clear_testgrandchildmessagefield() {
  if (GetArenaNoVirtual() == nullptr && testgrandchildmessagefield_ != nullptr) {
    delete testgrandchildmessagefield_;
  }
  testgrandchildmessagefield_ = nullptr;
}
inline const ::testPackage::TestGrandchildMessage& TestChildMessage::testgrandchildmessagefield() const {
  const ::testPackage::TestGrandchildMessage* p = testgrandchildmessagefield_;
  // @@protoc_insertion_point(field_get:testPackage.TestChildMessage.testGrandchildMessageField)
  return p != nullptr ? *p : *reinterpret_cast<const ::testPackage::TestGrandchildMessage*>(
      &::testPackage::_TestGrandchildMessage_default_instance_);
}
inline ::testPackage::TestGrandchildMessage* TestChildMessage::release_testgrandchildmessagefield() {
  // @@protoc_insertion_point(field_release:testPackage.TestChildMessage.testGrandchildMessageField)
  
  ::testPackage::TestGrandchildMessage* temp = testgrandchildmessagefield_;
  testgrandchildmessagefield_ = nullptr;
  return temp;
}
inline ::testPackage::TestGrandchildMessage* TestChildMessage::mutable_testgrandchildmessagefield() {
  
  if (testgrandchildmessagefield_ == nullptr) {
    auto* p = CreateMaybeMessage<::testPackage::TestGrandchildMessage>(GetArenaNoVirtual());
    testgrandchildmessagefield_ = p;
  }
  // @@protoc_insertion_point(field_mutable:testPackage.TestChildMessage.testGrandchildMessageField)
  return testgrandchildmessagefield_;
}
inline void TestChildMessage::set_allocated_testgrandchildmessagefield(::testPackage::TestGrandchildMessage* testgrandchildmessagefield) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete testgrandchildmessagefield_;
  }
  if (testgrandchildmessagefield) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      testgrandchildmessagefield = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, testgrandchildmessagefield, submessage_arena);
    }
    
  } else {
    
  }
  testgrandchildmessagefield_ = testgrandchildmessagefield;
  // @@protoc_insertion_point(field_set_allocated:testPackage.TestChildMessage.testGrandchildMessageField)
}

// -------------------------------------------------------------------

// TestMessage

// double doubleField = 1;
inline void TestMessage::clear_doublefield() {
  doublefield_ = 0;
}
inline double TestMessage::doublefield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.doubleField)
  return doublefield_;
}
inline void TestMessage::set_doublefield(double value) {
  
  doublefield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.doubleField)
}

// float floatField = 2;
inline void TestMessage::clear_floatfield() {
  floatfield_ = 0;
}
inline float TestMessage::floatfield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.floatField)
  return floatfield_;
}
inline void TestMessage::set_floatfield(float value) {
  
  floatfield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.floatField)
}

// int32 int32Field = 3;
inline void TestMessage::clear_int32field() {
  int32field_ = 0;
}
inline ::google::protobuf::int32 TestMessage::int32field() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.int32Field)
  return int32field_;
}
inline void TestMessage::set_int32field(::google::protobuf::int32 value) {
  
  int32field_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.int32Field)
}

// int64 int64Field = 4;
inline void TestMessage::clear_int64field() {
  int64field_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TestMessage::int64field() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.int64Field)
  return int64field_;
}
inline void TestMessage::set_int64field(::google::protobuf::int64 value) {
  
  int64field_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.int64Field)
}

// uint32 uint32Field = 5;
inline void TestMessage::clear_uint32field() {
  uint32field_ = 0u;
}
inline ::google::protobuf::uint32 TestMessage::uint32field() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.uint32Field)
  return uint32field_;
}
inline void TestMessage::set_uint32field(::google::protobuf::uint32 value) {
  
  uint32field_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.uint32Field)
}

// uint64 uint64Field = 6;
inline void TestMessage::clear_uint64field() {
  uint64field_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TestMessage::uint64field() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.uint64Field)
  return uint64field_;
}
inline void TestMessage::set_uint64field(::google::protobuf::uint64 value) {
  
  uint64field_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.uint64Field)
}

// bool boolField = 7;
inline void TestMessage::clear_boolfield() {
  boolfield_ = false;
}
inline bool TestMessage::boolfield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.boolField)
  return boolfield_;
}
inline void TestMessage::set_boolfield(bool value) {
  
  boolfield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.boolField)
}

// string stringField = 8;
inline void TestMessage::clear_stringfield() {
  stringfield_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TestMessage::stringfield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.stringField)
  return stringfield_.GetNoArena();
}
inline void TestMessage::set_stringfield(const ::std::string& value) {
  
  stringfield_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.stringField)
}
#if LANG_CXX11
inline void TestMessage::set_stringfield(::std::string&& value) {
  
  stringfield_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:testPackage.TestMessage.stringField)
}
#endif
inline void TestMessage::set_stringfield(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringfield_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:testPackage.TestMessage.stringField)
}
inline void TestMessage::set_stringfield(const char* value, size_t size) {
  
  stringfield_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:testPackage.TestMessage.stringField)
}
inline ::std::string* TestMessage::mutable_stringfield() {
  
  // @@protoc_insertion_point(field_mutable:testPackage.TestMessage.stringField)
  return stringfield_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestMessage::release_stringfield() {
  // @@protoc_insertion_point(field_release:testPackage.TestMessage.stringField)
  
  return stringfield_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestMessage::set_allocated_stringfield(::std::string* stringfield) {
  if (stringfield != nullptr) {
    
  } else {
    
  }
  stringfield_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringfield);
  // @@protoc_insertion_point(field_set_allocated:testPackage.TestMessage.stringField)
}

// .testPackage.TestEnum testEnumField = 9;
inline void TestMessage::clear_testenumfield() {
  testenumfield_ = 0;
}
inline ::testPackage::TestEnum TestMessage::testenumfield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.testEnumField)
  return static_cast< ::testPackage::TestEnum >(testenumfield_);
}
inline void TestMessage::set_testenumfield(::testPackage::TestEnum value) {
  
  testenumfield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.testEnumField)
}

// .testPackage.TestChildMessage testChildMessageField = 10;
inline bool TestMessage::has_testchildmessagefield() const {
  return this != internal_default_instance() && testchildmessagefield_ != nullptr;
}
inline void TestMessage::clear_testchildmessagefield() {
  if (GetArenaNoVirtual() == nullptr && testchildmessagefield_ != nullptr) {
    delete testchildmessagefield_;
  }
  testchildmessagefield_ = nullptr;
}
inline const ::testPackage::TestChildMessage& TestMessage::testchildmessagefield() const {
  const ::testPackage::TestChildMessage* p = testchildmessagefield_;
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.testChildMessageField)
  return p != nullptr ? *p : *reinterpret_cast<const ::testPackage::TestChildMessage*>(
      &::testPackage::_TestChildMessage_default_instance_);
}
inline ::testPackage::TestChildMessage* TestMessage::release_testchildmessagefield() {
  // @@protoc_insertion_point(field_release:testPackage.TestMessage.testChildMessageField)
  
  ::testPackage::TestChildMessage* temp = testchildmessagefield_;
  testchildmessagefield_ = nullptr;
  return temp;
}
inline ::testPackage::TestChildMessage* TestMessage::mutable_testchildmessagefield() {
  
  if (testchildmessagefield_ == nullptr) {
    auto* p = CreateMaybeMessage<::testPackage::TestChildMessage>(GetArenaNoVirtual());
    testchildmessagefield_ = p;
  }
  // @@protoc_insertion_point(field_mutable:testPackage.TestMessage.testChildMessageField)
  return testchildmessagefield_;
}
inline void TestMessage::set_allocated_testchildmessagefield(::testPackage::TestChildMessage* testchildmessagefield) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete testchildmessagefield_;
  }
  if (testchildmessagefield) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      testchildmessagefield = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, testchildmessagefield, submessage_arena);
    }
    
  } else {
    
  }
  testchildmessagefield_ = testchildmessagefield;
  // @@protoc_insertion_point(field_set_allocated:testPackage.TestMessage.testChildMessageField)
}

// uint64 repeatedDoubleLengthDoubleField = 11;
inline void TestMessage::clear_repeateddoublelengthdoublefield() {
  repeateddoublelengthdoublefield_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TestMessage::repeateddoublelengthdoublefield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.repeatedDoubleLengthDoubleField)
  return repeateddoublelengthdoublefield_;
}
inline void TestMessage::set_repeateddoublelengthdoublefield(::google::protobuf::uint64 value) {
  
  repeateddoublelengthdoublefield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.repeatedDoubleLengthDoubleField)
}

// repeated double repeatedDoubleField = 12;
inline int TestMessage::repeateddoublefield_size() const {
  return repeateddoublefield_.size();
}
inline void TestMessage::clear_repeateddoublefield() {
  repeateddoublefield_.Clear();
}
inline double TestMessage::repeateddoublefield(int index) const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.repeatedDoubleField)
  return repeateddoublefield_.Get(index);
}
inline void TestMessage::set_repeateddoublefield(int index, double value) {
  repeateddoublefield_.Set(index, value);
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.repeatedDoubleField)
}
inline void TestMessage::add_repeateddoublefield(double value) {
  repeateddoublefield_.Add(value);
  // @@protoc_insertion_point(field_add:testPackage.TestMessage.repeatedDoubleField)
}
inline const ::google::protobuf::RepeatedField< double >&
TestMessage::repeateddoublefield() const {
  // @@protoc_insertion_point(field_list:testPackage.TestMessage.repeatedDoubleField)
  return repeateddoublefield_;
}
inline ::google::protobuf::RepeatedField< double >*
TestMessage::mutable_repeateddoublefield() {
  // @@protoc_insertion_point(field_mutable_list:testPackage.TestMessage.repeatedDoubleField)
  return &repeateddoublefield_;
}

// uint64 repeatedStringLengthStringField = 13;
inline void TestMessage::clear_repeatedstringlengthstringfield() {
  repeatedstringlengthstringfield_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TestMessage::repeatedstringlengthstringfield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.repeatedStringLengthStringField)
  return repeatedstringlengthstringfield_;
}
inline void TestMessage::set_repeatedstringlengthstringfield(::google::protobuf::uint64 value) {
  
  repeatedstringlengthstringfield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.repeatedStringLengthStringField)
}

// repeated string repeatedStringField = 14;
inline int TestMessage::repeatedstringfield_size() const {
  return repeatedstringfield_.size();
}
inline void TestMessage::clear_repeatedstringfield() {
  repeatedstringfield_.Clear();
}
inline const ::std::string& TestMessage::repeatedstringfield(int index) const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.repeatedStringField)
  return repeatedstringfield_.Get(index);
}
inline ::std::string* TestMessage::mutable_repeatedstringfield(int index) {
  // @@protoc_insertion_point(field_mutable:testPackage.TestMessage.repeatedStringField)
  return repeatedstringfield_.Mutable(index);
}
inline void TestMessage::set_repeatedstringfield(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.repeatedStringField)
  repeatedstringfield_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TestMessage::set_repeatedstringfield(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.repeatedStringField)
  repeatedstringfield_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TestMessage::set_repeatedstringfield(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeatedstringfield_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:testPackage.TestMessage.repeatedStringField)
}
inline void TestMessage::set_repeatedstringfield(int index, const char* value, size_t size) {
  repeatedstringfield_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:testPackage.TestMessage.repeatedStringField)
}
inline ::std::string* TestMessage::add_repeatedstringfield() {
  // @@protoc_insertion_point(field_add_mutable:testPackage.TestMessage.repeatedStringField)
  return repeatedstringfield_.Add();
}
inline void TestMessage::add_repeatedstringfield(const ::std::string& value) {
  repeatedstringfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:testPackage.TestMessage.repeatedStringField)
}
#if LANG_CXX11
inline void TestMessage::add_repeatedstringfield(::std::string&& value) {
  repeatedstringfield_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:testPackage.TestMessage.repeatedStringField)
}
#endif
inline void TestMessage::add_repeatedstringfield(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeatedstringfield_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:testPackage.TestMessage.repeatedStringField)
}
inline void TestMessage::add_repeatedstringfield(const char* value, size_t size) {
  repeatedstringfield_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:testPackage.TestMessage.repeatedStringField)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
TestMessage::repeatedstringfield() const {
  // @@protoc_insertion_point(field_list:testPackage.TestMessage.repeatedStringField)
  return repeatedstringfield_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
TestMessage::mutable_repeatedstringfield() {
  // @@protoc_insertion_point(field_mutable_list:testPackage.TestMessage.repeatedStringField)
  return &repeatedstringfield_;
}

// uint64 repeatedTestChildMessageLengthTestChildMessageField = 15;
inline void TestMessage::clear_repeatedtestchildmessagelengthtestchildmessagefield() {
  repeatedtestchildmessagelengthtestchildmessagefield_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TestMessage::repeatedtestchildmessagelengthtestchildmessagefield() const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.repeatedTestChildMessageLengthTestChildMessageField)
  return repeatedtestchildmessagelengthtestchildmessagefield_;
}
inline void TestMessage::set_repeatedtestchildmessagelengthtestchildmessagefield(::google::protobuf::uint64 value) {
  
  repeatedtestchildmessagelengthtestchildmessagefield_ = value;
  // @@protoc_insertion_point(field_set:testPackage.TestMessage.repeatedTestChildMessageLengthTestChildMessageField)
}

// repeated .testPackage.TestChildMessage repeatedTestChildMessageField = 16;
inline int TestMessage::repeatedtestchildmessagefield_size() const {
  return repeatedtestchildmessagefield_.size();
}
inline void TestMessage::clear_repeatedtestchildmessagefield() {
  repeatedtestchildmessagefield_.Clear();
}
inline ::testPackage::TestChildMessage* TestMessage::mutable_repeatedtestchildmessagefield(int index) {
  // @@protoc_insertion_point(field_mutable:testPackage.TestMessage.repeatedTestChildMessageField)
  return repeatedtestchildmessagefield_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::testPackage::TestChildMessage >*
TestMessage::mutable_repeatedtestchildmessagefield() {
  // @@protoc_insertion_point(field_mutable_list:testPackage.TestMessage.repeatedTestChildMessageField)
  return &repeatedtestchildmessagefield_;
}
inline const ::testPackage::TestChildMessage& TestMessage::repeatedtestchildmessagefield(int index) const {
  // @@protoc_insertion_point(field_get:testPackage.TestMessage.repeatedTestChildMessageField)
  return repeatedtestchildmessagefield_.Get(index);
}
inline ::testPackage::TestChildMessage* TestMessage::add_repeatedtestchildmessagefield() {
  // @@protoc_insertion_point(field_add:testPackage.TestMessage.repeatedTestChildMessageField)
  return repeatedtestchildmessagefield_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::testPackage::TestChildMessage >&
TestMessage::repeatedtestchildmessagefield() const {
  // @@protoc_insertion_point(field_list:testPackage.TestMessage.repeatedTestChildMessageField)
  return repeatedtestchildmessagefield_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace testPackage

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::testPackage::TestEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::testPackage::TestEnum>() {
  return ::testPackage::TestEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Test_2eproto
